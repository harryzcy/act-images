name: Release

on:
  schedule:
    - cron: "30 3 * * *"
  workflow_dispatch:

permissions:
  contents: read

env:
  DOCKERHUB_REPO: harryzcy/ubuntu
  GHCR_REPO: ghcr.io/${{ github.repository_owner }}/ubuntu

jobs:
  tag:
    name: Create Tag
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Tag commit
        run: |
          git config user.name "GitHub Actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag "nightly-$(date '+%Y%m%d')"

      - name: Push tag
        run: git push origin "nightly-$(date '+%Y%m%d')"
        continue-on-error: true
        if: ${{ github.event_name == 'schedule' }}

  build:
    name: Nightly Docker Build
    runs-on: ${{ startsWith(matrix.arch, 'amd64') && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    permissions:
      packages: write
    needs: tag
    strategy:
      matrix:
        arch: [amd64, amd64/v2, amd64/v3, arm64]
        base-image: [22.04, 24.04]
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Show runner
        run: |
          uname -a
          cat /etc/os-release

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Prepare
        run: |
          ARTIFACT_NAME=ubuntu-${{ matrix.base-image }}-linux/${{ matrix.arch }}
          echo "ARTIFACT_NAME=${ARTIFACT_NAME//\//-}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: |
            ${{ env.DOCKERHUB_REPO }}
            ${{ env.GHCR_REPO }}

      - name: Login to DockerHub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3.9.0

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@0adf9959216b96bec444f325f1e493d4aa344497 # v6.14.0
        with:
          context: images/ubuntu/${{ matrix.base-image }}
          platforms: linux/${{ matrix.arch }}
          outputs: type=image,"name=${{ env.DOCKERHUB_REPO }},${{ env.GHCR_REPO }}",push-by-digest=true,name-canonical=true
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ github.event_name == 'schedule' }}

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: digests-${{ env.ARTIFACT_NAME }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    name: Merge Digests
    runs-on: ubuntu-24.04
    if: ${{ github.event_name == 'schedule' }}
    needs:
      - build
    permissions:
      packages: write
    strategy:
      matrix:
        base-image: [22.04, 24.04]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Download digests
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-ubuntu-${{ matrix.base-image }}-*
          merge-multiple: true

      - name: Login to DockerHub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3.9.0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: |
            ${{ env.DOCKERHUB_REPO }}
            ${{ env.GHCR_REPO }}
          tags: |
            type=schedule,pattern=${{ matrix.base-image }}-{{date 'YYYYMMDD'}}
            type=raw,value=latest,enable=${{ matrix.base-image == '24.04' }}
            type=raw,value=${{ matrix.base-image }}
            type=sha

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.DOCKERHUB_REPO }}@sha256:%s ' *)
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.GHCR_REPO }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.DOCKERHUB_REPO }}:${{ steps.meta.outputs.version }}
          docker buildx imagetools inspect ${{ env.GHCR_REPO }}:${{ steps.meta.outputs.version }}
