name: Build

on:
  push:
  pull_request:

permissions:
  contents: read

env:
  GHCR_REPO: ghcr.io/${{ github.repository_owner }}/ubuntu-dev

jobs:
  build:
    name: Docker Build
    runs-on: ${{ startsWith(matrix.arch, 'amd64') && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    permissions:
      packages: write
    strategy:
      matrix:
        arch: [amd64, amd64/v3, arm64]
        base-image: [22.04, 24.04]
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Show runner
        run: |
          uname -a
          cat /etc/os-release

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Prepare
        run: |
          ARTIFACT_NAME=ubuntu-${{ matrix.base-image }}-linux/${{ matrix.arch }}
          echo "ARTIFACT_NAME=${ARTIFACT_NAME//\//-}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: |
            ${{ env.GHCR_REPO }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Build image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: images/ubuntu/${{ matrix.base-image }}
          platforms: linux/${{ matrix.arch }}
          tags: ubuntu:${{ matrix.base-image }}
          outputs: type=docker

      - name: Show docker image
        run: |
          docker images

      - name: Print package version
        run: |
          docker run --rm -v "$PWD/scripts/version.sh:/version.sh" \
            ubuntu:${{ matrix.base-image }} bash /version.sh

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: images/ubuntu/${{ matrix.base-image }}
          platforms: linux/${{ matrix.arch }}
          outputs: type=image,"name=${{ env.GHCR_REPO }}",push-by-digest=true,name-canonical=true
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ github.event_name == 'pull_request' }}

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: digests-${{ env.ARTIFACT_NAME }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    name: Merge Digests
    runs-on: ubuntu-24.04
    if: github.event_name == 'pull_request'
    needs:
      - build
    permissions:
      packages: write
    strategy:
      matrix:
        base-image: [22.04, 24.04]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Download digests
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-ubuntu-${{ matrix.base-image }}-*
          merge-multiple: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: |
            ${{ env.GHCR_REPO }}
          tags: |
            type=ref,event=pr

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.GHCR_REPO }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.GHCR_REPO }}:${{ steps.meta.outputs.version }}
