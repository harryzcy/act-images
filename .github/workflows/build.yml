name: Build

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  docker-build:
    name: Docker Build
    runs-on: ${{ startsWith(matrix.arch, 'amd64') && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]
        base-image: [22.04, 24.04]
        include:
          - arch: amd64/v3
            base-image: 24.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          egress-policy: audit

      - name: Show runner
        run: |
          uname -a
          cat /etc/os-release

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0

      - name: Generate output path
        run: |
          # replace / with - in base image
          arch=${{ matrix.arch }}
          echo "suffix=${arch//\//-}" >> $GITHUB_ENV

      - name: Build docker image
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # v6.13.0
        with:
          context: images/ubuntu/${{ matrix.base-image }}
          platforms: linux/${{ matrix.arch }}
          tags: ubuntu:latest-${{ env.suffix }}
          outputs: type=oci,dest=${{ runner.temp }}/ubuntu-${{ env.suffix }}.tar
          push: false

      - name: Show docker image
        continue-on-error: true
        run: |
          sudo ls /var/lib/docker/tmp/
          sudo mkdir -p /var/lib/docker/tmp/
          cd ${{ runner.temp }}
          ls -l ubuntu-${{ env.suffix }}.tar
          cat ubuntu-${{ env.suffix }}.tar | docker load
          # docker load --input ubuntu-${{ env.suffix }}.tar
          docker images

      - name: Print package version
        run: |
          docker run --rm -v "$PWD/scripts/version.sh:/version.sh" ubuntu:latest-${{ env.suffix }} bash /version.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: ubuntu-${{ matrix.arch }}
          path: ${{ runner.temp }}/ubuntu-${{ matrix.arch }}.tar

  docker-manifest:
    name: Docker Manifest
    runs-on: ubuntu-24.04
    needs: docker-build
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Download artifacts (amd64)
        uses: actions/download-artifact@v4.1.8
        with:
          path: ${{ runner.temp }}
          merge-multiple: true

      - name: List artifacts (amd64)
        run: ls -l ${{ runner.temp }}

      - name: Load docker images
        run: |
          docker load -i ${{ runner.temp }}/ubuntu-amd64.tar
          docker load -i ${{ runner.temp }}/ubuntu-arm64-v3.tar
          docker load -i ${{ runner.temp }}/ubuntu-arm64.tar
          docker images ls -a

      - name: Create docker manifest
        run: |
          docker manifest create harryzcy/ubuntu:latest \
            harryzcy/ubuntu:latest-amd64 harryzcy/ubuntu:latest-arm64-v3 harryzcy/ubuntu:latest-arm64
          docker images ls -a
